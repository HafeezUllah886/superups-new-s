<?php
 namespace App\Http\Controllers; use App\Models\accounts; use App\Models\transactions; use App\Models\transfer; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; class TransferController extends Controller { public function index() { $transfers = transfer::orderby("\x69\x64", "\x64\x65\163\143")->get(); $accounts = accounts::whereNotIn("\x69\144", array(2, 3))->get(); return view("\x46\x69\156\x61\156\143\x65\x2e\x74\162\x61\156\x73\x66\145\162\x2e\151\x6e\x64\145\170", compact("\x74\x72\x61\x6e\x73\x66\145\162\x73", "\x61\x63\143\157\165\156\164\163")); } public function create() { } public function store(Request $request) { $request->validate(array("\x74\x6f" => "\x64\151\146\x66\x65\x72\x65\x6e\164\x3a\146\162\157\x6d"), array("\x74\x6f\x2e\x64\x69\146\x66\145\x72\x65\156\x74" => "\106\x72\x6f\x6d\40\x61\x6e\x64\40\124\x6f\x20\101\x63\x63\157\x75\x6e\x74\163\x20\115\x75\x73\x74\x20\142\x65\x20\x64\x69\x66\x66\145\162\145\x6e\x74")); try { DB::beginTransaction(); $ref = getRef(); $transfer = transfer::create(array("\x66\x72\x6f\155" => $request->from, "\x74\x6f" => $request->to, "\x64\x61\164\145" => $request->date, "\141\x6d\157\x75\x6e\164" => $request->amount, "\x6e\157\x74\145\x73" => $request->notes, "\162\145\x66\111\104" => $ref)); $fromAccount = $transfer->fromAccount->title; $toAccount = $transfer->toAccount->title; createTransaction($request->from, $request->date, 0, $request->amount, "\x54\x72\x61\156\x73\146\145\162\145\144\x20\164\x6f\40{$toAccount}\x20\x3c\x62\x72\76\x20{$request->notes}", $ref); createTransaction($request->to, $request->date, $request->amount, 0, "\x54\162\141\x6e\163\146\x65\162\145\144\x20\x66\162\x6f\155\x20{$fromAccount}\40\x3c\142\x72\x3e\x20{$request->notes}", $ref); DB::commit(); return back()->with("\163\x75\143\143\x65\x73\x73", "\124\162\141\x6e\163\x66\x65\162\x65\x64\x20\123\x75\x63\143\145\x73\x73\146\165\154\154\x79"); } catch (\Exception $e) { DB::rollBack(); return back()->with("\145\162\162\157\x72", $e->getMessage()); } } public function show(transfer $transfer) { } public function edit(transfer $transfer) { } public function update(Request $request, transfer $transfer) { } public function delete($ref) { try { DB::beginTransaction(); transfer::where("\162\145\x66\111\x44", $ref)->delete(); transactions::where("\162\x65\146\111\104", $ref)->delete(); DB::commit(); session()->forget("\x63\x6f\x6e\x66\151\x72\x6d\x65\x64\x5f\160\141\x73\163\167\157\x72\x64"); return redirect()->route("\x74\162\141\156\x73\x66\x65\x72\163\56\151\156\x64\x65\x78")->with("\163\x75\x63\143\145\x73\163", "\124\x72\x61\x6e\163\x66\x65\162\40\x44\x65\154\x65\164\x65\x64"); } catch (\Exception $e) { DB::rollBack(); session()->forget("\x63\x6f\156\146\x69\162\x6d\145\144\x5f\x70\141\x73\163\167\x6f\162\144"); return redirect()->route("\164\x72\x61\x6e\x73\146\x65\x72\x73\56\151\156\144\x65\170")->with("\x65\162\162\157\162", $e->getMessage()); } } }